<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.school.classinfo.mapper.CustomerDomainMapper">
  <resultMap id="BaseResultMap" type="cn.com.school.classinfo.model.CustomerDomain">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="domain" jdbcType="VARCHAR" property="domain" />
    <result column="server_ip" jdbcType="VARCHAR" property="serverIp" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
  </resultMap>
  <resultMap id="VoResultMap" type="cn.com.school.classinfo.vo.CustomerDomainVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="domain" jdbcType="VARCHAR" property="domain" />
    <result column="server_ip" jdbcType="VARCHAR" property="serverIp" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, tenant_id, company_id, category_id, domain, server_ip, state, create_time, create_by, 
    create_name, update_time, update_by, update_name
  </sql>
  <sql id="Vo_Column_List">
    cd.id, cd.tenant_id, cd.company_id, company.name company_name, cd.category_id, category.name category_name,
    cd.domain, cd.server_ip, cd.state, cd.create_time, cd.create_by,
    cd.create_name, cd.update_time, cd.update_by, cd.update_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_domain
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByQuery" parameterType="cn.com.school.classinfo.common.query.CustomerDomainQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer_domain
    <where>
      <if test="domain != null">
        and domain=#{domain}
      </if>
      <if test="companyId != null">
        and company_id=#{companyId}
      </if>
      and tenant_id = #{tenantId}
    </where>
  </select>
  <select id="selectListByQuery" parameterType="cn.com.school.classinfo.common.query.CustomerDomainQuery" resultMap="VoResultMap">
    select
    <include refid="Vo_Column_List" />
    from customer_domain cd
    join customer_company company
      on cd.company_id = company.id
    left join customer_category category
      on company.category_id = category.id
    where company.del = 0
      and cd.tenant_id = #{tenantId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer_domain
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.school.classinfo.model.CustomerDomain">
    insert into customer_domain (id, tenant_id, company_id, 
      category_id, domain, server_ip, 
      state, create_time, create_by, 
      create_name, update_time, update_by, 
      update_name)
    values (#{id,jdbcType=INTEGER}, #{tenantId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, 
      #{categoryId,jdbcType=INTEGER}, #{domain,jdbcType=INTEGER}, #{serverIp,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR},
      #{createName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR},
      #{updateName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.school.classinfo.model.CustomerDomain">
    insert into customer_domain
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="domain != null">
        domain,
      </if>
      <if test="serverIp != null">
        server_ip,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateName != null">
        update_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="domain != null">
        #{domain,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null">
        #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateName != null">
        #{updateName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.school.classinfo.model.CustomerDomain">
    update customer_domain
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="domain != null">
        domain = #{domain,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null">
        server_ip = #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateName != null">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.school.classinfo.model.CustomerDomain">
    update customer_domain
    set tenant_id = #{tenantId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      domain = #{domain,jdbcType=VARCHAR},
      server_ip = #{serverIp,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_name = #{createName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_name = #{updateName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByServerIp" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer_domain
    where server_ip = #{serverIp,jdbcType=VARCHAR}  or domain =  #{serverIp,jdbcType=VARCHAR}
  </select>
</mapper>