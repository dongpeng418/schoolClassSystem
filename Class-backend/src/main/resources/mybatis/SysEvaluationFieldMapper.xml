<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.school.classinfo.mapper.SysEvaluationFieldMapper">
  <resultMap id="BaseResultMap" type="cn.com.school.classinfo.model.SysEvaluationField">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="field_code" jdbcType="VARCHAR" property="fieldCode" />
    <result column="field_name" jdbcType="VARCHAR" property="fieldName" />
    <result column="display" jdbcType="BIT" property="display" />
    <result column="required" jdbcType="BIT" property="required" />
    <result column="field_type" jdbcType="VARCHAR" property="fieldType" />
    <result column="entry_type" jdbcType="BIT" property="entryType" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_name" jdbcType="VARCHAR" property="updateName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, tenant_id, company_id, organization_id, type, field_code, field_name, display, 
    required, field_type, entry_type, order_num, create_time, create_by, create_name, 
    update_time, update_by, update_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_evaluation_field
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectListByQuery" parameterType="cn.com.school.classinfo.common.query.EvalFieldQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_evaluation_field
    where type = #{type}
    and tenant_id = #{tenantId}
    <if test="companyId != null">
      and company_id = #{companyId}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_evaluation_field
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.school.classinfo.model.SysEvaluationField">
    insert into sys_evaluation_field (id, tenant_id, company_id, 
      organization_id, type, field_code, 
      field_name, display, required, 
      field_type, entry_type, order_num, 
      create_time, create_by, create_name, 
      update_time, update_by, update_name
      )
    values (#{id,jdbcType=INTEGER}, #{tenantId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, 
      #{organizationId,jdbcType=INTEGER}, #{type,jdbcType=BIT}, #{fieldCode,jdbcType=VARCHAR}, 
      #{fieldName,jdbcType=VARCHAR}, #{display,jdbcType=BIT}, #{required,jdbcType=BIT}, 
      #{fieldType,jdbcType=VARCHAR}, #{entryType,jdbcType=BIT}, #{orderNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{createName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.school.classinfo.model.SysEvaluationField">
    insert into sys_evaluation_field
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="fieldCode != null">
        field_code,
      </if>
      <if test="fieldName != null">
        field_name,
      </if>
      <if test="display != null">
        display,
      </if>
      <if test="required != null">
        required,
      </if>
      <if test="fieldType != null">
        field_type,
      </if>
      <if test="entryType != null">
        entry_type,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateName != null">
        update_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="fieldCode != null">
        #{fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null">
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="display != null">
        #{display,jdbcType=BIT},
      </if>
      <if test="required != null">
        #{required,jdbcType=BIT},
      </if>
      <if test="fieldType != null">
        #{fieldType,jdbcType=VARCHAR},
      </if>
      <if test="entryType != null">
        #{entryType,jdbcType=BIT},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateName != null">
        #{updateName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.school.classinfo.model.SysEvaluationField">
    update sys_evaluation_field
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="fieldCode != null">
        field_code = #{fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="fieldName != null">
        field_name = #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="display != null">
        display = #{display,jdbcType=BIT},
      </if>
      <if test="required != null">
        required = #{required,jdbcType=BIT},
      </if>
      <if test="fieldType != null">
        field_type = #{fieldType,jdbcType=VARCHAR},
      </if>
      <if test="entryType != null">
        entry_type = #{entryType,jdbcType=BIT},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateName != null">
        update_name = #{updateName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.school.classinfo.model.SysEvaluationField">
    update sys_evaluation_field
    set tenant_id = #{tenantId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      organization_id = #{organizationId,jdbcType=INTEGER},
      type = #{type,jdbcType=BIT},
      field_code = #{fieldCode,jdbcType=VARCHAR},
      field_name = #{fieldName,jdbcType=VARCHAR},
      display = #{display,jdbcType=BIT},
      required = #{required,jdbcType=BIT},
      field_type = #{fieldType,jdbcType=VARCHAR},
      entry_type = #{entryType,jdbcType=BIT},
      order_num = #{orderNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_name = #{createName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_name = #{updateName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="batchUpdate" parameterType="cn.com.school.classinfo.model.SysEvaluationField">
     <foreach collection='list' item='item' separator=';'>
        UPDATE sys_evaluation_field
        SET
           display = #{item.display},
           required = #{item.required},
           update_time = now(),
           update_by = #{item.updateBy},
           update_name = #{item.updateName}
        WHERE id = #{item.id}
     </foreach>
  </update>
  <insert id="batchInsert" parameterType="cn.com.school.classinfo.model.SysEvaluationField">
    insert into sys_evaluation_field(
      tenant_id, company_id, organization_id, type, field_code, field_name, display,
      required, field_type, entry_type, order_num, create_time, create_by, create_name,
      update_time, update_by, update_name
    ) 
    values
    <foreach collection ='list' item='item' separator =','>
    (
      #{item.tenantId,jdbcType=INTEGER}, #{item.companyId,jdbcType=INTEGER},
      #{item.organizationId,jdbcType=INTEGER}, #{item.type,jdbcType=INTEGER}, #{item.fieldCode,jdbcType=VARCHAR},
      #{item.fieldName,jdbcType=VARCHAR}, #{item.display,jdbcType=INTEGER}, #{item.required,jdbcType=INTEGER},
      #{item.fieldType,jdbcType=VARCHAR}, #{item.entryType,jdbcType=INTEGER}, #{item.orderNum,jdbcType=INTEGER},
      now(), #{item.createBy,jdbcType=VARCHAR}, #{item.createName,jdbcType=VARCHAR},
      now(), #{item.updateBy,jdbcType=VARCHAR}, #{item.updateName,jdbcType=VARCHAR}
    )
    </foreach>
  </insert>
</mapper>