<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.school.classinfo.mapper.TenantStatisticsMapper">

    <resultMap id="SummaryResultMap" type="cn.com.school.classinfo.vo.TenantEvalSummaryVO">
        <result property="haTotal" column="haTotal" jdbcType="INTEGER"/>
        <result property="rapidTotal" column="rapidTotal" jdbcType="INTEGER"/>
        <result property="batchTotal" column="batchTotal" jdbcType="INTEGER"/>
        <result property="inquiryTotal" column="inquiryTotal" jdbcType="INTEGER"/>
        <result property="advisoryTotal" column="advisoryTotal" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="SummaryItemResultMap" type="cn.com.school.classinfo.vo.TenantEvalSummaryItemVO">
        <result property="companyId" column="companyId" jdbcType="INTEGER"/>
        <result property="customerId" column="customerId" jdbcType="INTEGER"/>
        <result property="companyName" column="companyName" jdbcType="VARCHAR"/>
        <result property="customer" column="customer" jdbcType="VARCHAR"/>
        <result property="categoryName" column="categoryName" jdbcType="VARCHAR"/>
        <result property="ha" column="ha" jdbcType="INTEGER"/>
        <result property="rapid" column="rapid" jdbcType="INTEGER"/>
        <result property="inquiry" column="inquiry" jdbcType="INTEGER"/>
        <result property="advisory" column="advisory" jdbcType="INTEGER"/>
        <result property="batch" column="batch" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ItemsResultMap" type="cn.com.school.classinfo.vo.TenantEvalItemsVO">
        <result property="haTotal" column="haTotal" jdbcType="INTEGER"/>
        <result property="rapidTotal" column="rapidTotal" jdbcType="INTEGER"/>
        <result property="batchTotal" column="batchTotal" jdbcType="INTEGER"/>
        <result property="inquiryTotal" column="inquiryTotal" jdbcType="INTEGER"/>
        <result property="advisoryTotal" column="advisoryTotal" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ItemResultMap" type="cn.com.school.classinfo.vo.TenantEvalItemVO">
        <result property="companyName" column="companyName" jdbcType="VARCHAR"/>
        <result property="userName" column="userName" jdbcType="VARCHAR"/>
        <result property="categoryName" column="categoryName" jdbcType="VARCHAR"/>
        <result property="evalMethod" column="evalMethod" jdbcType="VARCHAR"/>
        <result property="evalType" column="evalType" jdbcType="VARCHAR"/>
        <result property="evalDate" column="evalDate" jdbcType="TIMESTAMP"/>
        <result property="cityName" column="cityName" jdbcType="VARCHAR"/>
        <result property="location" column="location" jdbcType="VARCHAR"/>
        <result property="haName" column="haName" jdbcType="VARCHAR"/>
        <result property="bldgArea" column="bldgArea" jdbcType="FLOAT"/>
        <result property="unitPrice" column="unitPrice" jdbcType="FLOAT"/>
        <result property="totalPrice" column="totalPrice" jdbcType="FLOAT"/>
    </resultMap>

    <sql id="Base_Column_List">
      id,tenant_id,company_id,organization_id,eval_id,eval_type,eval_code,state,city_name,ha_name,bldg_area,total_price,eval_date,
      actual_price,objection_time,objection_reason,reply,create_time,create_by,create_name,update_time,update_by,update_name
    </sql>

    <sql id="Part_Column_List">
      id,tenant_id,company_id,organization_id,eval_id,eval_type,eval_code,state,city_name,ha_name,bldg_area,total_price,eval_date,
      actual_price,objection_time,objection_reason,reply
    </sql>

    <select id="selectCustomerCount" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalSummaryQuery">
        select
          count(*)
        from sys_user
        where user_type = #{userType}
        and tenant_id = #{tenantId}
    </select>

    <select id="selectSummary" resultMap="SummaryResultMap" parameterType="cn.com.school.classinfo.common.query.TenantEvalSummaryQuery">
        SELECT
        SUM(summary.haTotal) haTotal,
        SUM(summary.rapidTotal) rapidTotal,
        SUM(summary.inquiryTotal) inquiryTotal,
        SUM(summary.advisoryTotal) advisoryTotal,
        SUM(summary.batchTotal) batchTotal
        FROM
        (SELECT
        SUM(1) AS haTotal,
        SUM(record.history_count) AS rapidTotal,
        0 AS inquiryTotal,
        0 AS advisoryTotal,
        0 AS batchTotal
        FROM
        (
        SELECT
        company.id companyId,
        company.name companyName,
        user.id userId,
        user.login_user loginUser,
        category.name categoryName
        FROM
        (
        SELECT * FROM customer_company where del = 0 and tenant_id = #{tenantId}
        ) company
        LEFT JOIN
        customer_category category
        ON
        company.category_id = category.id
        JOIN
        sys_user user
        ON
        company.id = user.customer_company_id
        <where>
            user.user_type = 2
            <if test="companyName">
                AND company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test="account">
                AND user.login_user LIKE CONCAT('%',#{account},'%')
            </if>
            <if test="categoryId != null">
                AND category.id = #{categoryId}
            </if>
        </where>
        ) customer
        JOIN
        evaluation_record record
        ON
        customer.companyId = record.company_id
        GROUP BY customer.companyId
        UNION ALL
        SELECT
        0,
        0,
        SUM(er.inquiry),
        SUM(er.advisory),
        0
        FROM
        (SELECT
        customer.companyId as companyId,
        CASE report_type
        WHEN 1 THEN 1
        ELSE 0
        END AS inquiry,
        CASE report_type
        WHEN 2 THEN 1
        ELSE 0
        END AS advisory
        FROM
        (
        SELECT
        company.id companyId,
        company.name companyName,
        user.id userId,
        user.login_user loginUser,
        category.name categoryName
        FROM
        (
        SELECT * FROM customer_company where del = 0 and tenant_id = #{tenantId}
        ) company
        LEFT JOIN
        customer_category category
        ON
        company.category_id = category.id
        JOIN
        sys_user user
        ON
        company.id = user.customer_company_id
        <where>
            user.user_type = 2
            <if test="companyName">
                AND company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test="account">
                AND user.login_user LIKE CONCAT('%',#{account},'%')
            </if>
            <if test="categoryId != null">
                AND category.id = #{categoryId}
            </if>
        </where>
        ) customer
        JOIN
        evaluation_report report
        ON
        customer.companyId = report.company_id
        ) er
        GROUP BY er.companyId
        UNION ALL
        SELECT
        0, 0, 0, 0, SUM(eval_success)
        FROM
        (
        SELECT
        company.id companyId,
        company.name companyName,
        user.id userId,
        user.login_user loginUser,
        category.name categoryName
        FROM
        (
        SELECT * FROM customer_company where del = 0 and tenant_id = #{tenantId}
        ) company
        LEFT JOIN
        customer_category category
        ON
        company.category_id = category.id
        JOIN
        sys_user user
        ON
        company.id = user.customer_company_id
        <where>
            user.user_type = 2
            <if test="companyName">
                AND company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test="account">
                AND user.login_user LIKE CONCAT('%',#{account},'%')
            </if>
            <if test="categoryId != null">
                AND category.id = #{categoryId}
            </if>
        </where>
        ) customer
        JOIN
        evaluation_batch batch
        ON
        customer.companyId = batch.company_id
        GROUP BY customer.companyId) summary
    </select>

    <select id="selectSummaryItem" resultMap="SummaryItemResultMap" parameterType="cn.com.school.classinfo.common.query.TenantEvalSummaryQuery">
        SELECT
        summary.companyId ,
        max(summary.companyName) as companyName,
        max(summary.userId) as customerId,
        max(summary.loginUser) as customer,
        max(summary.categoryName) as categoryName,
        SUM(summary.haTotal) ha,
        SUM(summary.rapidTotal) rapid,
        SUM(summary.inquiryTotal) inquiry,
        SUM(summary.advisoryTotal) advisory,
        SUM(summary.batchTotal) batch
        FROM
        (SELECT
        customer.companyId ,
        max(customer.companyName) as companyName,
        max(customer.userId) as userId,
        max(customer.loginUser) as loginUser,
        max(customer.categoryName) as categoryName,
        SUM(1) AS haTotal,
        SUM(record.history_count) AS rapidTotal,
        0 AS inquiryTotal,
        0 AS advisoryTotal,
        0 AS batchTotal
        FROM
        (
        SELECT
        company.id companyId,
        company.name companyName,
        user.id userId,
        user.login_user loginUser,
        category.name categoryName
        FROM
        (
        SELECT * FROM customer_company where del = 0 and tenant_id = #{tenantId}
        ) company
        LEFT JOIN
        customer_category category
        ON
        company.category_id = category.id
        JOIN
        sys_user user
        ON
        company.id = user.customer_company_id
        <where>
            user.user_type = 2
            <if test="companyName != null">
                AND company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test="account != null">
                AND user.login_user LIKE CONCAT('%',#{account},'%')
            </if>
            <if test="categoryId != null">
                AND category.id = #{categoryId}
            </if>
        </where>
        ) customer
        JOIN
        (select * from evaluation_record
        <trim prefix='WHERE' prefixOverrides='AND |OR'>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
        </trim>
        ) record
        ON
        customer.companyId = record.company_id
        GROUP BY customer.companyId
        UNION ALL
        SELECT
        er.companyId ,
        max(er.companyName) as companyName,
        max(er.userId) as userId,
        max(er.loginUser) as loginUser,
        max(er.categoryName) as categoryName,
        0,
        0,
        SUM(er.inquiry),
        SUM(er.advisory),
        0
        FROM
        (
        SELECT
        customer.companyId ,
        customer.companyName,
        customer.userId,
        customer.loginUser,
        customer.categoryName,
        CASE report_type
        WHEN 1 THEN 1
        ELSE 0
        END AS inquiry,
        CASE report_type
        WHEN 2 THEN 1
        ELSE 0
        END AS advisory
        FROM
        (
        SELECT
        company.id companyId,
        company.name companyName,
        user.id userId,
        user.login_user loginUser,
        category.name categoryName
        FROM
        (
        SELECT * FROM customer_company where del = 0 and tenant_id = #{tenantId}
        ) company
        LEFT JOIN
        customer_category category
        ON
        company.category_id = category.id
        JOIN
        sys_user user
        ON
        company.id = user.customer_company_id
        <where>
            user.user_type = 2
            <if test="companyName">
                AND company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test="account">
                AND user.login_user LIKE CONCAT('%',#{account},'%')
            </if>
            <if test="categoryId != null">
                AND category.id = #{categoryId}
            </if>
        </where>
        ) customer
        JOIN
        evaluation_report report
        ON
        customer.companyId = report.company_id
        <trim prefix='WHERE' prefixOverrides='AND |OR'>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
        </trim>
        ) er
        GROUP BY er.companyId
        UNION ALL
        SELECT
        customer.companyId ,
        max(customer.companyName) as companyName,
        max(customer.userId) as userId,
        max(customer.loginUser) as loginUser,
        max(customer.categoryName) as categoryName,
        0, 0, 0, 0, SUM(eval_success)
        FROM
        (
        SELECT
        company.id companyId,
        company.name companyName,
        user.id userId,
        user.login_user loginUser,
        category.name categoryName
        FROM
        (
        SELECT * FROM customer_company where del = 0 and tenant_id = #{tenantId}
        ) company
        LEFT JOIN
        customer_category category
        ON
        company.category_id = category.id
        JOIN
        sys_user user
        ON
        company.id = user.customer_company_id
        <where>
            user.user_type = 2
            <if test="companyName">
                AND company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test="account">
                AND user.login_user LIKE CONCAT('%',#{account},'%')
            </if>
            <if test="categoryId != null">
                AND category.id = #{categoryId}
            </if>
        </where>
        ) customer
        JOIN
        evaluation_batch batch
        ON
        customer.companyId = batch.company_id
        <trim prefix='WHERE' prefixOverrides='AND |OR'>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(batch.finish_time, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(batch.finish_time, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
        </trim>
        GROUP BY customer.companyId
        ) summary
        GROUP BY summary.companyId
    </select>

    <select id="selectItemsByEvalTotal" resultMap="ItemsResultMap" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery">
        SELECT
        sum(1) as haTotal,
        sum(record.history_count) as rapidTotal
        FROM
        customer_company company
        JOIN evaluation_record record
        ON company.id = record.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND record.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
    </select>

    <select id="selectItemsByEvalBatchTotal" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery">
        SELECT
        sum(eval_success)
        FROM
        customer_company company
        JOIN evaluation_batch batch
        ON company.id = batch.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(batch.finish_time, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(batch.finish_time, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND batch.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
    </select>

    <select id="selectItemsByReportTotal" resultMap="ItemsResultMap" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery">
        SELECT
        SUM(summary.haTotal) haTotal,
        SUM(summary.inquiryTotal) inquiryTotal,
        SUM(summary.advisoryTotal) advisoryTotal
        FROM
        (SELECT
        SUM(1) AS haTotal,
        0 AS inquiryTotal,
        0 AS advisoryTotal
        FROM
        (
        SELECT * FROM customer_company where del = 0 and tenant_id = #{tenantId}
        ) company
        LEFT JOIN
        evaluation_record record
        ON
        company.id = record.company_id
        <where>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND record.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
        GROUP BY company.id
        UNION ALL
        SELECT
        0,
        SUM(er.inquiry),
        SUM(er.advisory)
        FROM
        (SELECT
        company.id as companyId,
        CASE report_type
        WHEN 1 THEN 1
        ELSE 0
        END AS inquiry,
        CASE report_type
        WHEN 2 THEN 1
        ELSE 0
        END AS advisory
        FROM
        (
        SELECT * FROM customer_company where del = 0 and tenant_id = #{tenantId}
        <if test="companyName != null">
            and name LIKE CONCAT('%',#{companyName},'%')
        </if>
        ) company
        LEFT JOIN
        evaluation_report report
        ON
        company.id = report.company_id
        <where>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND report.update_by LIKE CONCAT('%',#{account},'%')
            </if>
            <if test="statSubMethod == '21'">
                AND report.report_type = 1
            </if>
            <if test="statSubMethod == '22'">
                AND report.report_type = 2
            </if>
        </where>
        ) er
        GROUP BY er.companyId
        ) summary
    </select>

    <select id="selectItemsByEvalRecordCount" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery">
        SELECT
          count(*)
        FROM
          customer_company company
        JOIN
          evaluation_record record
        ON company.id = record.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test="companyName != null">
                and company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
    </select>

    <select id="selectItemsByEvalHistoryCount" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery">
        SELECT
          count(*)
        FROM
          customer_company company
        JOIN
          evaluation_record_history history
        ON company.id = history.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test="companyName != null">
                and company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
    </select>

    <select id="selectItemsByEvalBatchCount" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery">
        SELECT
        count(*)
        FROM
          customer_company company
        JOIN
        (
          select company_id from evaluation_batch_item
          <where>
            and eval_state = 1
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND update_by LIKE CONCAT('%',#{account},'%')
            </if>
          </where>
        ) item
        ON company.id = item.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test="companyName != null">
                and company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
        </where>
    </select>

    <select id="selectItemsByEval" resultMap="ItemResultMap" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery">
        SELECT company.name companyName,
            record.update_by loginUser,
            record.update_name userName,
            record.eval_date evalDate,
            1 as evalMethod,
            record.eval_type evalType,
            record.city_name cityName,
            record.ha_name haName,
            record.location,
            record.bldg_area bldgArea,
            record.unit_price unitPrice,
            record.total_price totalPrice
        FROM
          customer_company company
        JOIN
          evaluation_record record
        ON company.id = record.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test="companyName != null">
                and company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
        UNION ALL
        SELECT company.name companyName,
            history.update_by loginUser,
            history.update_name userName,
            history.eval_date evalDate,
            1 as evalMethod,
            history.eval_type evalType,
            history.city_name cityName,
            history.ha_name haName,
            history.location,
            history.bldg_area bldgArea,
            history.unit_price unitPrice,
            history.total_price totalPrice
        FROM
          customer_company company
        JOIN
          evaluation_record_history history
        ON company.id = history.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test="companyName != null">
                and company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
        UNION ALL
        SELECT company.name companyName,
            item.update_by loginUser,
            item.update_name userName,
            item.eval_date evalDate,
            2 as evalMethod,
            1 as evalType,
            item.city_name cityName,
            item.ha_name haName,
            item.location,
            item.bldg_area bldgArea,
            item.unit_price unitPrice,
            item.total_price totalPrice
        FROM
          customer_company company
        JOIN
        (
            select
              company_id,update_by,update_name,eval_date,city_name,
              ha_name,location,bldg_area,unit_price,total_price
            from evaluation_batch_item
            <where>
                and eval_state = 1
                and tenant_id = #{tenantId}
                <if test='beginDate != null'>
                    <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
                </if>
                <if test='endDate != null'>
                    <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
                </if>
                <if test='account != null'>
                    AND update_by LIKE CONCAT('%',#{account},'%')
                </if>
            </where>
            order by eval_date
        ) item
        ON company.id = item.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
        </where>
        order by 4 desc
        <if test="pageStart != null">
            limit #{pageStart}, #{pageSize}
        </if>
    </select>

    <select id="selectItemsEvalRecordUsers" resultType="java.lang.String" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery" >
        SELECT
        distinct record.update_by
        FROM
        customer_company company
        JOIN
        evaluation_record record
        ON
        company.id = record.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND record.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
    </select>

    <select id="selectItemsEvalBatchUsers" resultType="java.lang.String" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery" >
        SELECT
        distinct batch.update_by
        FROM
        customer_company company
        JOIN
        evaluation_batch batch
        ON
        company.id = batch.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(batch.finish_time, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(batch.finish_time, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND batch.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
    </select>

    <select id="selectItemsEvalRecordCompany" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery" >
        SELECT
        distinct record.company_id
        FROM
        customer_company company
        JOIN
        evaluation_record record
        ON
        company.id = record.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND record.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
    </select>

    <select id="selectItemsEvalBatchCompany" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery" >
        SELECT
        distinct batch.company_id
        FROM
        customer_company company
        JOIN
        evaluation_batch batch
        ON
        company.id = batch.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(batch.finish_time, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(batch.finish_time, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND batch.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
    </select>

    <select id="selectItemsRecordUsers" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery" >
        SELECT
        count(loginUser)
        FROM
        (SELECT
        record.update_by as loginUser
        FROM
        customer_company company
        JOIN
        evaluation_record record
        ON
        company.id = record.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND record.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
        GROUP BY record.update_by
        ) summary
    </select>

    <select id="selectItemsRecordCompany" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery" >
        SELECT
        count(companyId)
        FROM
        (SELECT
        record.company_id as companyId
        FROM
        customer_company company
        JOIN
        evaluation_record record
        ON
        company.id = record.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND record.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
        GROUP BY record.company_id
        ) summary
    </select>

    <select id="selectItemsReportUsers" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery" >
        SELECT
        count(loginUser)
        FROM
        (SELECT
        report.update_by as loginUser
        FROM
        customer_company company
        JOIN
        evaluation_report report
        ON
        company.id = report.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND report.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
        GROUP BY report.update_by
        ) summary
    </select>

    <select id="selectItemsReportCompany" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery" >
        SELECT
        count(companyId)
        FROM
        (SELECT
        report.company_id as companyId
        FROM
        customer_company company
        JOIN
        evaluation_report report
        ON
        company.id = report.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND report.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
        GROUP BY report.company_id
        ) summary
    </select>

    <select id="selectItemsBatchUsers" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery" >
        SELECT
        count(loginUser)
        FROM
        (SELECT
        item.update_by as loginUser
        FROM
        customer_company company
        JOIN
        evaluation_batch_item item
        ON
        company.id = item.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(item.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(item.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND item.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
        GROUP BY item.update_by) summary
    </select>

    <select id="selectItemsBatchCompany" resultType="java.lang.Integer" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery" >
        SELECT
        count(companyId)
        FROM
        (SELECT
        item.company_id as companyId
        FROM
        customer_company company
        JOIN
        evaluation_batch_item item
        ON
        company.id = item.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(item.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(item.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND item.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
        GROUP BY item.company_id) summary
    </select>

    <select id="selectItemsByRapid" resultMap="ItemResultMap" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery">
        SELECT
        company.name companyName,
        record.update_by loginUser,
        record.update_name userName,
        record.eval_date evalDate,
        1 evalMethod,
        record.eval_type evalType,
        record.city_name cityName,
        record.ha_name haName,
        record.location location,
        record.bldg_area bldgArea,
        record.unit_price unitPrice,
        record.total_price totalPrice
        FROM
        customer_company company
        JOIN evaluation_record record
        ON company.id = record.company_id
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test="companyName != null">
                and company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(record.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND record.update_by LIKE CONCAT('%',#{account},'%')
            </if>
        </where>
        ORDER BY record.eval_date desc
    </select>

    <select id="selectItemsByBatch" resultMap="ItemResultMap" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery">
        SELECT
            company.name companyName,
            item.update_by loginUser,
            item.update_name userName,
            item.eval_date evalDate,
            2 evalMethod,
            1 evalType,
            item.city_name cityName,
            item.ha_name haName,
            item.location location,
            item.bldg_area bldgArea,
            item.unit_price unitPrice,
            item.total_price totalPrice
        FROM
        customer_company company
        JOIN
        (
            select
                company_id,update_by,update_name,eval_date,city_name,
                ha_name,location,bldg_area,unit_price,total_price
            from evaluation_batch_item
            <where>
                and eval_state = 1
                and tenant_id = #{tenantId}
                <if test='beginDate != null'>
                    <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
                </if>
                <if test='endDate != null'>
                    <![CDATA[ AND DATE_FORMAT(eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
                </if>
                <if test='account != null'>
                    AND update_by LIKE CONCAT('%',#{account},'%')
                </if>
            </where>
            order by eval_date
        ) item
        ON company.id = item.company_id
        <where>
            and company.del = 0
            and company.tenant_id = #{tenantId}
            <if test="companyName != null">
                and company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
        </where>
        limit #{pageStart}, #{pageSize}
    </select>

    <select id="selectItemsByReport" resultMap="ItemResultMap" parameterType="cn.com.school.classinfo.common.query.TenantEvalItemsQuery">
        SELECT name companyName,
        update_by loginUser,
        update_name userName,
        eval_date evalDate,
        report_type evalMethod,
        eval_type evalType,
        city_name cityName,
        ha_name haName,
        location,
        bldg_area bldgArea,
        unit_price unitPrice,
        total_price totalPrice
        FROM (
        SELECT
        company.name,
        report.update_by,
        report.update_name,
        report.eval_date,
        report.report_type,
        record.eval_type,
        record.city_name,
        record.ha_name,
        record.location,
        record.bldg_area,
        report.unit_price,
        report.total_price
        FROM
        customer_company company
        JOIN evaluation_record record
        ON company.id = record.company_id
        JOIN evaluation_report report
        ON record.eval_code = report.eval_code
        <trim prefix='WHERE' prefixOverrides='AND |OR'>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test="companyName != null">
                and company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND report.update_by LIKE CONCAT('%',#{account},'%')
            </if>
            <if test="statSubMethod == '21'">
                AND report.report_type = 1
            </if>
            <if test="statSubMethod == '22'">
                AND report.report_type = 2
            </if>
        </trim>
        UNION ALL
        SELECT company.name,
        report.update_by,
        report.update_name,
        report.eval_date,
        report.report_type,
        history.eval_type,
        history.city_name,
        history.ha_name,
        history.location,
        history.bldg_area,
        report.unit_price,
        report.total_price
        FROM
        customer_company company
        JOIN evaluation_record_history history
        ON company.id = history.company_id
        JOIN evaluation_report report
        ON history.eval_code = report.eval_code
        <where>
            company.del = 0
            and company.tenant_id = #{tenantId}
            <if test="companyName != null">
                and company.name LIKE CONCAT('%',#{companyName},'%')
            </if>
            <if test='beginDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') >= DATE_FORMAT(#{beginDate}, '%Y-%m-%d')]]>
            </if>
            <if test='endDate != null'>
                <![CDATA[ AND DATE_FORMAT(report.eval_date, '%Y-%m-%d') <= DATE_FORMAT(#{endDate}, '%Y-%m-%d')]]>
            </if>
            <if test='account != null'>
                AND report.update_by LIKE CONCAT('%',#{account},'%')
            </if>
            <if test="statSubMethod == '21'">
                AND report.report_type = 1
            </if>
            <if test="statSubMethod == '22'">
                AND report.report_type = 2
            </if>
        </where>
        ) statReport order by eval_date
    </select>

</mapper>