<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.school.classinfo.mapper.ScUserMapper">
  <resultMap id="BaseResultMap" type="cn.com.school.classinfo.model.ScUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="login_user" jdbcType="VARCHAR" property="loginUser" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="created_id" jdbcType="VARCHAR" property="createdId" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="current_login_date" jdbcType="TIMESTAMP" property="currentLoginDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_type, user_id, login_user, password, created_id, created_time, last_login_date, 
    current_login_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sc_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.school.classinfo.model.ScUser">
    insert into sc_user (id, user_type, user_id, 
      login_user, password, created_id, 
      created_time, last_login_date, current_login_date
      )
    values (#{id,jdbcType=INTEGER}, #{userType,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{loginUser,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{createdId,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{lastLoginDate,jdbcType=TIMESTAMP}, #{currentLoginDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.school.classinfo.model.ScUser">
    insert into sc_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginUser != null">
        login_user,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createdId != null">
        created_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="lastLoginDate != null">
        last_login_date,
      </if>
      <if test="currentLoginDate != null">
        current_login_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginUser != null">
        #{loginUser,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdId != null">
        #{createdId,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="currentLoginDate != null">
        #{currentLoginDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.school.classinfo.model.ScUser">
    update sc_user
    <set>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginUser != null">
        login_user = #{loginUser,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdId != null">
        created_id = #{createdId,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginDate != null">
        last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="currentLoginDate != null">
        current_login_date = #{currentLoginDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.school.classinfo.model.ScUser">
    update sc_user
    set user_type = #{userType,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      login_user = #{loginUser,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      created_id = #{createdId,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      current_login_date = #{currentLoginDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>